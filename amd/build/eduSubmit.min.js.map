{"version":3,"file":"eduSubmit.min.js","sources":["../src/eduSubmit.js"],"sourcesContent":["import {getCourseId} from \"./options\";\nimport {addEduSharingInstance, deleteEduSharingInstance} from \"./repository\";\nimport Config from 'core/config';\n\nexport const initEventHandler = (editor) => {\n    const container = editor.getContainer();\n    const form = container.closest(\"form\");\n    form.addEventListener('submit', async(event) => {\n        event.preventDefault();\n        await convertForSubmit(editor);\n        form.submit();\n    });\n};\n\n/**\n * The variable initialElements contains all existing es objects found when the editor is instantiated.\n * This is needed for bookkeeping.\n */\nlet initialElements = [];\n\nconst convertForSubmit = async(editor) => {\n    const iterateAsync = async domNode => {\n        if (domNode.hasChildNodes()) {\n            for (const node of domNode.childNodes) {\n                await iterateAsync(node);\n            }\n        }\n        if (domNode.classList !== undefined && domNode.classList.contains('edusharing_atto')) {\n            let link = domNode.getAttribute(domNode.nodeName.toLowerCase() === 'img' ? 'src' : 'href');\n            let uri = new URL(link);\n            let searchParams = uri.searchParams;\n            let indexOfElement = initialElements.indexOf(searchParams.get('resource_id'));\n            if (indexOfElement > 0) {\n                initialElements.splice(indexOfElement, 1);\n            } else {\n                const ajaxParams = {\n                    eduStructure: {\n                        name: searchParams.get('title'),\n                        objectUrl: searchParams.get('object_url'),\n                        courseId: parseInt(getCourseId(editor)),\n                        objectVersion: searchParams.get('window_version')\n                    }\n                };\n                let response = await addEduSharingInstance(ajaxParams);\n                if (response.id !== undefined) {\n                    let isImage = domNode.nodeName.toLowerCase() === 'img';\n                    let previewUrl = `${Config.wwwroot}/lib/editor/tiny/plugins/edusharing/preview.php`\n                        + '?resourceId=' + response.id + '&' + searchParams.toString();\n                    domNode.setAttribute(isImage ? 'src' : 'href', previewUrl);\n                }\n            }\n        }\n    };\n    const container = window.document.createElement('div');\n    container.innerHTML = editor.getContent();\n    await iterateAsync(container);\n    editor.setContent(container.innerHTML);\n    for (const resourceId of initialElements) {\n        await deleteEduSharingInstance({\n            eduDeleteStructure: {\n                id: resourceId,\n                courseId: parseInt(getCourseId(editor))\n            }\n        });\n    }\n};\n\nexport const initExistingElements = editor => {\n    const iterate = domNode => {\n        if (domNode.hasChildNodes()) {\n            for (const node of domNode.childNodes) {\n                iterate(node);\n            }\n        }\n        if (domNode.classList !== undefined && domNode.classList.contains('edusharing_atto')) {\n            let link = domNode.getAttribute(domNode.nodeName.toLowerCase() === 'img' ? 'src' : 'href');\n            let uri = new URL(link);\n            initialElements.push(parseInt(uri.searchParams.get('resourceId')));\n        }\n    };\n    const container = window.document.createElement('div');\n    container.innerHTML = editor.getContent();\n    iterate(container);\n};\n"],"names":["editor","form","getContainer","closest","addEventListener","async","event","preventDefault","convertForSubmit","submit","initialElements","iterateAsync","domNode","hasChildNodes","node","childNodes","undefined","classList","contains","link","getAttribute","nodeName","toLowerCase","searchParams","URL","indexOfElement","indexOf","get","splice","ajaxParams","eduStructure","name","objectUrl","courseId","parseInt","objectVersion","response","id","isImage","previewUrl","Config","wwwroot","toString","setAttribute","container","window","document","createElement","innerHTML","getContent","setContent","resourceId","eduDeleteStructure","iterate","uri","push"],"mappings":"0VAIiCA,eAEvBC,KADYD,OAAOE,eACFC,QAAQ,QAC/BF,KAAKG,iBAAiB,UAAUC,MAAAA,QAC5BC,MAAMC,uBACAC,iBAAiBR,QACvBC,KAAKQ,iBAQTC,gBAAkB,SAEhBF,iBAAmBH,MAAAA,eACfM,aAAeN,MAAAA,aACbO,QAAQC,oBACH,MAAMC,QAAQF,QAAQG,iBACjBJ,aAAaG,cAGDE,IAAtBJ,QAAQK,WAA2BL,QAAQK,UAAUC,SAAS,mBAAoB,KAC9EC,KAAOP,QAAQQ,aAAgD,QAAnCR,QAAQS,SAASC,cAA0B,MAAQ,QAE/EC,aADM,IAAIC,IAAIL,MACKI,aACnBE,eAAiBf,gBAAgBgB,QAAQH,aAAaI,IAAI,mBAC1DF,eAAiB,EACjBf,gBAAgBkB,OAAOH,eAAgB,OACpC,OACGI,WAAa,CACfC,aAAc,CACVC,KAAMR,aAAaI,IAAI,SACvBK,UAAWT,aAAaI,IAAI,cAC5BM,SAAUC,UAAS,wBAAYlC,SAC/BmC,cAAeZ,aAAaI,IAAI,wBAGpCS,eAAiB,qCAAsBP,oBACvBb,IAAhBoB,SAASC,GAAkB,KACvBC,QAA6C,QAAnC1B,QAAQS,SAASC,cAC3BiB,WAAa,UAAGC,gBAAOC,2DACrB,eAAiBL,SAASC,GAAK,IAAMd,aAAamB,WACxD9B,QAAQ+B,aAAaL,QAAU,MAAQ,OAAQC,gBAKzDK,UAAYC,OAAOC,SAASC,cAAc,OAChDH,UAAUI,UAAYhD,OAAOiD,mBACvBtC,aAAaiC,WACnB5C,OAAOkD,WAAWN,UAAUI,eACvB,MAAMG,cAAczC,sBACf,wCAAyB,CAC3B0C,mBAAoB,CAChBf,GAAIc,WACJlB,SAAUC,UAAS,wBAAYlC,2CAMXA,eAC1BqD,QAAUzC,aACRA,QAAQC,oBACH,MAAMC,QAAQF,QAAQG,WACvBsC,QAAQvC,cAGUE,IAAtBJ,QAAQK,WAA2BL,QAAQK,UAAUC,SAAS,mBAAoB,KAC9EC,KAAOP,QAAQQ,aAAgD,QAAnCR,QAAQS,SAASC,cAA0B,MAAQ,QAC/EgC,IAAM,IAAI9B,IAAIL,MAClBT,gBAAgB6C,KAAKrB,SAASoB,IAAI/B,aAAaI,IAAI,kBAGrDiB,UAAYC,OAAOC,SAASC,cAAc,OAChDH,UAAUI,UAAYhD,OAAOiD,aAC7BI,QAAQT"}